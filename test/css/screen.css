@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

html {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

q, blockquote {
  quotes: none;
}
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

a img {
  border: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block;
}

html {
  font-size: 100%;
  line-height: 1.5em;
}

html {
  font-family: sans-serif;
}

body {
  padding: 1.5rem;
}

h1 {
  font-weight: bold;
}

[role="banner"] {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 48px;
  line-height: 3rem;
}

.results {
  margin-top: 24px;
  margin-top: 1.5rem;
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
  border-width: 1px;
  border-width: 0.0625rem;
  border-style: solid;
  padding: 23px;
  padding: 1.4375rem;
  background-color: rgba(255, 0, 0, 0.25);
  border-color: red;
}
.results:before {
  content: 'Unit Tests: ';
  font-weight: bold;
}
.results:before, .results:after {
  display: inline;
}

.test-module {
  border-bottom-width: 6px;
  border-bottom-width: 0.375rem;
  border-bottom-style: solid;
  padding-bottom: 18px;
  padding-bottom: 1.125rem;
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
  border-style: dotted;
}
.test-module:last-of-type {
  padding-bottom: 0;
  border: 0;
}
.test-module > h1 {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 48px;
  line-height: 3rem;
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
}

[class^="test__"] {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
}
[class^="test__"] h1 {
  padding: 0.375rem 0.75rem;
  background: #666;
  color: #eee;
  font-weight: normal;
  font-family: monospace, sans-serif;
}

[class^="assert__"] {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
  text-align: center;
}
[class^="assert__"] div {
  background: rgba(255, 255, 255, 0.25);
  outline: 1px solid rgba(255, 0, 0, 0.25);
  outline-offset: -1px;
}
[class^="assert__"] .test, [class^="assert__"] .expect {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 24px;
  line-height: 1.5rem;
  background: -moz-linear-gradient(right, rgba(255, 255, 255, 0.75), rgba(255, 255, 255, 0.75)), rgba(255, 204, 204, 0.5);
  background: -webkit-linear-gradient(right, rgba(255, 255, 255, 0.75), rgba(255, 255, 255, 0.75)), rgba(255, 204, 204, 0.5);
  background: linear-gradient(to left, rgba(255, 255, 255, 0.75), rgba(255, 255, 255, 0.75)), rgba(255, 204, 204, 0.5);
  -moz-background-clip: content, border;
  -webkit-background-clip: content, border;
  background-clip: content-box, border-box;
}
[class^="assert__"] .test {
  outline-color: red;
}
[class^="assert__"] .expect {
  outline-color: green;
}
[class^="assert__"] .spacer {
  height: 3.75rem;
  outline: 1px solid rgba(68, 68, 68, 0.25);
  background: rgba(68, 68, 68, 0.125);
}

/* ### Map Helpers ---------- */
/* - truncate-list (1 Assertions, 1 Passed, 0 Failed) */
/* - deep-get (1 Assertions, 1 Passed, 0 Failed) */
/* - deep-set (2 Assertions, 2 Passed, 0 Failed) */
/* - deep-merge (1 Assertions, 1 Passed, 0 Failed) */
/* - deep-has-key (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 5 Tests: */
/* - 5 Passed */
/* - 0 Failed */
/*
*/
/* ### General Settings ---------- */
/* - susy-defaults (2 Assertions, 2 Passed, 0 Failed) */
/* - [mixin] susy-set (1 Assertions, 1 Passed, 0 Failed) */
/* - [function] susy-get (6 Assertions, 6 Passed, 0 Failed) */
/*
*/
/* 3 Tests: */
/* - 3 Passed */
/* - 0 Failed */
/*
*/
/* ### Grid Validation ---------- */
/* - [mixin] valid-columns (4 Assertions, 4 Passed, 0 Failed) */
/* - [mixin] valid-gutters (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 2 Tests: */
/* - 2 Passed */
/* - 0 Failed */
/*
*/
/* ### Column Math ---------- */
/* - [function] is-symmetrical() (3 Assertions, 3 Passed, 0 Failed) */
/* - [function] susy-count() (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] susy-sum() — symmetrical (4 Assertions, 4 Passed, 0 Failed) */
/* - [function] susy-sum() — asymmetrical (3 Assertions, 3 Passed, 0 Failed) */
/* - [function] susy-slice() (3 Assertions, 3 Passed, 0 Failed) */
/* - [function] susy() (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 6 Tests: */
/* - 6 Passed */
/* - 0 Failed */
/*
*/
/* ### Language Settings ---------- */
/* - [function] parse-grid (30 Assertions, 30 Passed, 0 Failed) */
/* - [function] parse-span (44 Assertions, 44 Passed, 0 Failed) */
/* - [function] parse-gutters (11 Assertions, 11 Passed, 0 Failed) */
/*
*/
/* 3 Tests: */
/* - 3 Passed */
/* - 0 Failed */
/*
*/
/* ### Grids Syntax ---------- */
/* - [mixin] layout (7 Assertions, 7 Passed, 0 Failed) */
/* - [mixin] with-layout (6 Assertions, 6 Passed, 0 Failed) */
/* - [function] layout (1 Assertions, 1 Passed, 0 Failed) */
/* - [function] _get-layout (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 4 Tests: */
/* - 4 Passed */
/* - 0 Failed */
/*
*/
/* ### Global Box-Sizing Syntax ---------- */
/* - [mixin] global-box-sizing */
.test__global-box-sizing .assert__global-box-sizing {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__global-box-sizing .assert__global-box-sizing .nest {
  padding-left: 15%;
  padding-right: 15%;
  width: 60%;
  margin: 0 auto;
}

.test__global-box-sizing .assert__global-box-sizing:before {
  content: "Nested items should use border-box model.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] border-box-sizing */
.test__border-box-sizing .assert__border-box-sizing {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__border-box-sizing .assert__border-box-sizing .nest {
  padding-left: 15%;
  padding-right: 15%;
  width: 60%;
  margin: 0 auto;
}

.test__border-box-sizing .assert__border-box-sizing:before {
  content: "Nested items should use border-box model.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - update-box-model (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 1 Tests: */
/* - 1 Passed */
/* - 0 Failed */
/*
*/
/* ### Shared Context Language ---------- */
/* - [function] nested (3 Assertions, 3 Passed, 0 Failed) */
/* - [mixin] nested (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 2 Tests: */
/* - 2 Passed */
/* - 0 Failed */
/*
*/
/* ### Background Syntax ---------- */
/* - [mixin] background-grid */
.test__background-grid .assert__outside {
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid .assert__outside:before {
  content: "Items should have a 7-column grid with outside gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__background-grid .assert__split {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid .assert__split:before {
  content: "Items should have a 8-column grid with split gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__background-grid .assert__inside {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid .assert__inside:before {
  content: "Items should have a 8-column grid with inside gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__background-grid .assert__asym-outside {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid .assert__asym-outside:before {
  content: "Items should have a (1 2 3 2 1)-column grid with outside gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__background-grid .assert__asym-split {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid .assert__asym-split:before {
  content: "Items should have a (1 2 3 3)-column grid with split gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__background-grid .assert__asym-inside {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid .assert__asym-inside:before {
  content: "Items should have a (1 2 3 3)-column grid with inside gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] get-background-sym (6 Assertions, 6 Passed, 0 Failed) */
/* - [function] get-asym-inside (1 Assertions, 1 Passed, 0 Failed) */
/* - [function] get-asym-split (1 Assertions, 1 Passed, 0 Failed) */
/* - [function] get-asym-outside (1 Assertions, 1 Passed, 0 Failed) */
/* - [function] get-background-asym (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] get-background (5 Assertions, 5 Passed, 0 Failed) */
/* - [function] get-debug (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 7 Tests: */
/* - 7 Passed */
/* - 0 Failed */
/*
*/
/* ### Container Syntax ---------- */
/* - [mixin] container */
.test__container .assert__default-box {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__container .assert__default-box:before {
  content: "Containers should have 80% max-width and show a 7 .5 grid.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__container .assert__border-box {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__container .assert__border-box:before {
  content: "Containers should have 40em max-width, border-box-sizing, and show a (1 2 3 2 1) (4em 2em) grid, flush left.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] container (5 Assertions, 5 Passed, 0 Failed) */
/* - [function] get-container-width (6 Assertions, 6 Passed, 0 Failed) */
/* - [function] parse-container-position() (7 Assertions, 7 Passed, 0 Failed) */
/*
*/
/* 3 Tests: */
/* - 3 Passed */
/* - 0 Failed */
/*
*/
/* ### Span Syntax ---------- */
/* - [mixin] span */
.test__span .assert__default {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__span .assert__default:after {
  content: " ";
  display: block;
  clear: both;
}

.test__span .assert__default .test, .test__span .assert__default .expect {
  clear: both;
}
.test__span .assert__default .test:after, .test__span .assert__default .expect:after {
  content: " ";
  display: block;
  clear: both;
}
.test__span .assert__default .test .inner, .test__span .assert__default .expect .inner {
  background: rgba(255, 255, 0, 0.25);
}

.test__span .assert__default:before {
  content: "Span should set width (75%), float (left), and gutter (5% margin-right)";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__span .assert__inside {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__span .assert__inside:after {
  content: " ";
  display: block;
  clear: both;
}

.test__span .assert__inside .spacer {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 25%;
  float: left;
  padding-left: 1.25%;
  padding-right: 1.25%;
  clear: left;
}

.test__span .assert__inside:before {
  content: "Span should set width, float, clear, and inside gutter";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__span .assert__explicit {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__span .assert__explicit:after {
  content: " ";
  display: block;
  clear: both;
}

.test__span .assert__explicit .test, .test__span .assert__explicit .expect {
  clear: both;
}

.test__span .assert__explicit:before {
  content: "Span should set width, float, inside gutter, and border-box";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] span (4 Assertions, 4 Passed, 0 Failed) */
/* - [function] span (1 Assertions, 1 Passed, 0 Failed) */
/* - [function] span-math (14 Assertions, 14 Passed, 0 Failed) */
/* - [function] get-span-width (12 Assertions, 12 Passed, 0 Failed) */
/*
*/
/* 4 Tests: */
/* - 4 Passed */
/* - 0 Failed */
/*
*/
/* ### Gutter Syntax ---------- */
/* - [mixin] gutters */
.test__gutters .assert__auto {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gutters .assert__auto:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gutters .assert__auto:before {
  content: "Item should have 2.5% margin-gutters added before and after";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gutters .assert__inside-static {
  max-width: 42em;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 14.28571%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gutters .assert__inside-static:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gutters .assert__inside-static:before {
  content: "Item should have 1em padding-gutters added before and after";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gutters .assert__explicit {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 14.28571%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gutters .assert__explicit:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gutters .assert__explicit:before {
  content: "Item should have 5em padding-gutters added before and after";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] gutter (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] get-gutter-width (9 Assertions, 9 Passed, 0 Failed) */
/* - [function] get-gutters (3 Assertions, 3 Passed, 0 Failed) */
/* - [function] is-inside (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] is-split (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] gutter-math (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 6 Tests: */
/* - 6 Passed */
/* - 0 Failed */
/*
*/
/* ### Isolation Syntax ---------- */
/* - [mixin] isolate */
.test__isolate .assert__isolate {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__isolate .assert__isolate:after {
  content: " ";
  display: block;
  clear: both;
}

.test__isolate .assert__isolate .test, .test__isolate .assert__isolate .expect {
  width: 25%;
  float: right;
  margin-right: 0;
  clear: both;
}

.test__isolate .assert__isolate:before {
  content: "Item should be isolated in the last 2 columns";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] isolate (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] get-isolation (4 Assertions, 4 Passed, 0 Failed) */
/*
*/
/* 2 Tests: */
/* - 2 Passed */
/* - 0 Failed */
/*
*/
/* ### Gallery Syntax ---------- */
/* - [mixin] gallery */
.test__gallery .assert__sym {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 55.55556%, rgba(0, 0, 0, 0) 55.55556%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 55.55556%, rgba(0, 0, 0, 0) 55.55556%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 55.55556%, rgba(0, 0, 0, 0) 55.55556%);
  background-size: 18%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gallery .assert__sym:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gallery .assert__sym .nest:after {
  content: " ";
  display: block;
  clear: both;
}
.test__gallery .assert__sym .test, .test__gallery .assert__sym .expect {
  margin-bottom: 0px;
  margin-bottom: 0rem;
}

.test__gallery .assert__sym:before {
  content: "Items should create 3x symmetrical isolated gallery.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gallery .assert__inside {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gallery .assert__inside:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gallery .assert__inside .nest:after {
  content: " ";
  display: block;
  clear: both;
}
.test__gallery .assert__inside .test, .test__gallery .assert__inside .expect {
  margin-bottom: 0px;
  margin-bottom: 0rem;
}

.test__gallery .assert__inside:before {
  content: "Items should create 4x isolated gallery with inside-gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gallery .assert__inside-static {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 16.66667%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gallery .assert__inside-static:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gallery .assert__inside-static .nest:after {
  content: " ";
  display: block;
  clear: both;
}
.test__gallery .assert__inside-static .test, .test__gallery .assert__inside-static .expect {
  margin-bottom: 0px;
  margin-bottom: 0rem;
}

.test__gallery .assert__inside-static:before {
  content: "Items should create 3x isolated gallery with inside-static gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gallery .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gallery .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gallery .assert__split .nest:after {
  content: " ";
  display: block;
  clear: both;
}
.test__gallery .assert__split .test, .test__gallery .assert__split .expect {
  margin-bottom: 0px;
  margin-bottom: 0rem;
}

.test__gallery .assert__split:before {
  content: "Items should create 4x isolated gallery with split-gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gallery .assert__asym {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12%, rgba(102, 102, 255, 0.25) 12%, rgba(179, 179, 255, 0.25) 32%, rgba(0, 0, 0, 0) 32%, rgba(0, 0, 0, 0) 34%, rgba(102, 102, 255, 0.25) 34%, rgba(179, 179, 255, 0.25) 44.0%, rgba(0, 0, 0, 0) 44.0%, rgba(0, 0, 0, 0) 46%, rgba(102, 102, 255, 0.25) 46%, rgba(179, 179, 255, 0.25) 66.0%, rgba(0, 0, 0, 0) 66.0%, rgba(0, 0, 0, 0) 68%, rgba(102, 102, 255, 0.25) 68%, rgba(179, 179, 255, 0.25) 88.0%, rgba(0, 0, 0, 0) 88.0%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12%, rgba(102, 102, 255, 0.25) 12%, rgba(179, 179, 255, 0.25) 32%, rgba(0, 0, 0, 0) 32%, rgba(0, 0, 0, 0) 34%, rgba(102, 102, 255, 0.25) 34%, rgba(179, 179, 255, 0.25) 44.0%, rgba(0, 0, 0, 0) 44.0%, rgba(0, 0, 0, 0) 46%, rgba(102, 102, 255, 0.25) 46%, rgba(179, 179, 255, 0.25) 66.0%, rgba(0, 0, 0, 0) 66.0%, rgba(0, 0, 0, 0) 68%, rgba(102, 102, 255, 0.25) 68%, rgba(179, 179, 255, 0.25) 88.0%, rgba(0, 0, 0, 0) 88.0%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12%, rgba(102, 102, 255, 0.25) 12%, rgba(179, 179, 255, 0.25) 32%, rgba(0, 0, 0, 0) 32%, rgba(0, 0, 0, 0) 34%, rgba(102, 102, 255, 0.25) 34%, rgba(179, 179, 255, 0.25) 44.0%, rgba(0, 0, 0, 0) 44.0%, rgba(0, 0, 0, 0) 46%, rgba(102, 102, 255, 0.25) 46%, rgba(179, 179, 255, 0.25) 66.0%, rgba(0, 0, 0, 0) 66.0%, rgba(0, 0, 0, 0) 68%, rgba(102, 102, 255, 0.25) 68%, rgba(179, 179, 255, 0.25) 88.0%, rgba(0, 0, 0, 0) 88.0%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gallery .assert__asym:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gallery .assert__asym .nest:after {
  content: " ";
  display: block;
  clear: both;
}
.test__gallery .assert__asym .test, .test__gallery .assert__asym .expect {
  margin-bottom: 0px;
  margin-bottom: 0rem;
}

.test__gallery .assert__asym:before {
  content: "Items should create 3x isolated asymmetrical gallery.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__gallery .assert__asym-inside {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 15%, rgba(102, 102, 255, 0.25) 15%, rgba(179, 179, 255, 0.25) 40%, rgba(102, 102, 255, 0.25) 40%, rgba(179, 179, 255, 0.25) 85%, rgba(102, 102, 255, 0.25) 85%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 15%, rgba(102, 102, 255, 0.25) 15%, rgba(179, 179, 255, 0.25) 40%, rgba(102, 102, 255, 0.25) 40%, rgba(179, 179, 255, 0.25) 85%, rgba(102, 102, 255, 0.25) 85%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 15%, rgba(102, 102, 255, 0.25) 15%, rgba(179, 179, 255, 0.25) 40%, rgba(102, 102, 255, 0.25) 40%, rgba(179, 179, 255, 0.25) 85%, rgba(102, 102, 255, 0.25) 85%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__gallery .assert__asym-inside:after {
  content: " ";
  display: block;
  clear: both;
}

.test__gallery .assert__asym-inside .nest:after {
  content: " ";
  display: block;
  clear: both;
}
.test__gallery .assert__asym-inside .test, .test__gallery .assert__asym-inside .expect {
  margin-bottom: 0px;
  margin-bottom: 0rem;
}

.test__gallery .assert__asym-inside:before {
  content: "Items should create 2x isolated asymmetrical gallery, with inside gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*
*/
/* 0 Tests: */
/* - 0 Passed */
/* - 0 Failed */
/*
*/
/* ### Row Syntax ---------- */
/* - [mixin] break */
.test__break .assert__break {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 14.28571%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__break .assert__break:after {
  content: " ";
  display: block;
  clear: both;
}

.test__break .assert__break .spacer {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 28.57143%;
  float: left;
  padding-left: 2.38095%;
  padding-right: 2.38095%;
}

.test__break .assert__break:before {
  content: "breaks should clear preceeding floats";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] nobreak */
.test__nobreak .assert__nobreak {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 14.28571%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__nobreak .assert__nobreak:after {
  content: " ";
  display: block;
  clear: both;
}

.test__nobreak .assert__nobreak .spacer {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 28.57143%;
  float: left;
  padding-left: 2.38095%;
  padding-right: 2.38095%;
}
.test__nobreak .assert__nobreak .test, .test__nobreak .assert__nobreak .expect {
  clear: both;
}

.test__nobreak .assert__nobreak:before {
  content: "Non-breaks should not clear floated elements";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] full */
.test__full .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__full .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__full .assert__split .spacer {
  width: 22.5%;
  float: left;
  margin-left: 1.25%;
  margin-right: 1.25%;
}

.test__full .assert__split:before {
  content: "Full spans clear preceeding floats, and have gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__full .assert__after {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__full .assert__after:after {
  content: " ";
  display: block;
  clear: both;
}

.test__full .assert__after .spacer {
  width: 25%;
  float: left;
  margin-right: 5%;
}

.test__full .assert__after:before {
  content: "Full spans clear preceeding floats, and have gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] first */
.test__first .assert__before {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__first .assert__before:after {
  content: " ";
  display: block;
  clear: both;
}

.test__first .assert__before .test, .test__first .assert__before .expect {
  width: 25%;
  float: left;
  margin-left: 5%;
  clear: left;
}

.test__first .assert__before:before {
  content: "First items should have left margins removed.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__first .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__first .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__first .assert__split .test, .test__first .assert__split .expect {
  width: 22.5%;
  float: left;
  margin-left: 1.25%;
  margin-right: 1.25%;
  clear: left;
}

.test__first .assert__split:before {
  content: "Nothing should happen to split first items.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] alpha */
.test__alpha .assert__alpha {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__alpha .assert__alpha:after {
  content: " ";
  display: block;
  clear: both;
}

.test__alpha .assert__alpha .test, .test__alpha .assert__alpha .expect {
  width: 25%;
  float: left;
  margin-left: 5%;
  clear: left;
}

.test__alpha .assert__alpha:before {
  content: "Alpha items should have left margins removed.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] last */
.test__last .assert__after {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__last .assert__after:after {
  content: " ";
  display: block;
  clear: both;
}

.test__last .assert__after .test, .test__last .assert__after .expect {
  width: 25%;
  float: left;
  margin-right: 5%;
  clear: both;
}

.test__last .assert__after:before {
  content: "Last items should float right, with right margins removed";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__last .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 16.66667%, rgba(102, 102, 255, 0.25) 16.66667%, rgba(179, 179, 255, 0.25) 83.33333%, rgba(0, 0, 0, 0) 83.33333%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 16.66667%, rgba(102, 102, 255, 0.25) 16.66667%, rgba(179, 179, 255, 0.25) 83.33333%, rgba(0, 0, 0, 0) 83.33333%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 16.66667%, rgba(102, 102, 255, 0.25) 16.66667%, rgba(179, 179, 255, 0.25) 83.33333%, rgba(0, 0, 0, 0) 83.33333%);
  background-size: 14.28571%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__last .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__last .assert__split .test, .test__last .assert__split .expect {
  width: 23.80952%;
  float: left;
  margin-left: 2.38095%;
  margin-right: 2.38095%;
  clear: both;
}

.test__last .assert__split:before {
  content: "Last items should float right.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__last .assert__last-flow {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__last .assert__last-flow:after {
  content: " ";
  display: block;
  clear: both;
}

.test__last .assert__last-flow .test, .test__last .assert__last-flow .expect {
  width: 25%;
  float: left;
  margin-right: 5%;
  clear: both;
}

.test__last .assert__last-flow:before {
  content: 'Last items should not override float if last-flow is "from", with right margins removed';
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] omega */
.test__omega .assert__omega {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__omega .assert__omega:after {
  content: " ";
  display: block;
  clear: both;
}

.test__omega .assert__omega .test, .test__omega .assert__omega .expect {
  width: 25%;
  float: left;
  margin-right: 5%;
  clear: both;
}

.test__omega .assert__omega:before {
  content: "Omega items should float right, with right margins removed";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] get-edge (6 Assertions, 6 Passed, 0 Failed) */
/* - [function] get-location (4 Assertions, 4 Passed, 0 Failed) */
/*
*/
/* 2 Tests: */
/* - 2 Passed */
/* - 0 Failed */
/*
*/
/*

### Margin Syntax ------ */
/* - [mixin] pre */
.test__pre .assert__wide {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pre .assert__wide:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pre .assert__wide .spacer {
  width: 15%;
  float: left;
  margin-left: 0;
}
.test__pre .assert__wide .test, .test__pre .assert__wide .expect {
  width: 40%;
  float: left;
  margin-left: 5%;
}

.test__pre .assert__wide:before {
  content: "Items should have 2-columns (wide) margin before.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pre .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pre .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pre .assert__split .test, .test__pre .assert__split .expect {
  width: 47.5%;
  float: left;
  margin-left: 1.25%;
  margin-right: 1.25%;
}

.test__pre .assert__split:before {
  content: "Items should have 2-columns margin before, including split gutter.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pre .assert__wider {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pre .assert__wider:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pre .assert__wider .spacer {
  width: 10%;
  float: left;
  margin-left: 0;
}
.test__pre .assert__wider .test, .test__pre .assert__wider .expect {
  width: 40%;
  float: left;
  margin-left: 5%;
}

.test__pre .assert__wider:before {
  content: "Items should have 2-columns (wider) margin before.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] post */
.test__post .assert__wide {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__post .assert__wide:after {
  content: " ";
  display: block;
  clear: both;
}

.test__post .assert__wide:before {
  content: "Items should have 2-columns (wide) margin after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__post .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 1.25%, rgba(102, 102, 255, 0.25) 1.25%, rgba(179, 179, 255, 0.25) 11.25%, rgba(0, 0, 0, 0) 11.25%, rgba(0, 0, 0, 0) 13.75%, rgba(102, 102, 255, 0.25) 13.75%, rgba(179, 179, 255, 0.25) 33.75%, rgba(0, 0, 0, 0) 33.75%, rgba(0, 0, 0, 0) 36.25%, rgba(102, 102, 255, 0.25) 36.25%, rgba(179, 179, 255, 0.25) 66.25%, rgba(0, 0, 0, 0) 66.25%, rgba(0, 0, 0, 0) 68.75%, rgba(102, 102, 255, 0.25) 68.75%, rgba(179, 179, 255, 0.25) 98.75%, rgba(0, 0, 0, 0) 98.75%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 1.25%, rgba(102, 102, 255, 0.25) 1.25%, rgba(179, 179, 255, 0.25) 11.25%, rgba(0, 0, 0, 0) 11.25%, rgba(0, 0, 0, 0) 13.75%, rgba(102, 102, 255, 0.25) 13.75%, rgba(179, 179, 255, 0.25) 33.75%, rgba(0, 0, 0, 0) 33.75%, rgba(0, 0, 0, 0) 36.25%, rgba(102, 102, 255, 0.25) 36.25%, rgba(179, 179, 255, 0.25) 66.25%, rgba(0, 0, 0, 0) 66.25%, rgba(0, 0, 0, 0) 68.75%, rgba(102, 102, 255, 0.25) 68.75%, rgba(179, 179, 255, 0.25) 98.75%, rgba(0, 0, 0, 0) 98.75%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 1.25%, rgba(102, 102, 255, 0.25) 1.25%, rgba(179, 179, 255, 0.25) 11.25%, rgba(0, 0, 0, 0) 11.25%, rgba(0, 0, 0, 0) 13.75%, rgba(102, 102, 255, 0.25) 13.75%, rgba(179, 179, 255, 0.25) 33.75%, rgba(0, 0, 0, 0) 33.75%, rgba(0, 0, 0, 0) 36.25%, rgba(102, 102, 255, 0.25) 36.25%, rgba(179, 179, 255, 0.25) 66.25%, rgba(0, 0, 0, 0) 66.25%, rgba(0, 0, 0, 0) 68.75%, rgba(102, 102, 255, 0.25) 68.75%, rgba(179, 179, 255, 0.25) 98.75%, rgba(0, 0, 0, 0) 98.75%);
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__post .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__post .assert__split .test, .test__post .assert__split .expect {
  margin-left: 1.25%;
  margin-right: 1.25%;
}

.test__post .assert__split:before {
  content: "Items should have 2-columns margin after, including split gutter.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__post .assert__wider {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__post .assert__wider:after {
  content: " ";
  display: block;
  clear: both;
}

.test__post .assert__wider .spacer {
  width: 20%;
  float: left;
  margin-right: 2.5%;
  height: 1.5rem;
}
.test__post .assert__wider .test, .test__post .assert__wider .expect {
  width: 32.5%;
  float: left;
  margin-right: 2.5%;
}

.test__post .assert__wider:before {
  content: "Items should have 1-column (wide-2) margin after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] push */
.test__push .assert__push {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__push .assert__push:after {
  content: " ";
  display: block;
  clear: both;
}

.test__push .assert__push .test, .test__push .assert__push .expect {
  width: 47.5%;
  float: left;
  margin-left: 1.25%;
  margin-right: 1.25%;
}

.test__push .assert__push:before {
  content: "Items should have 2-columns margin before.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] pull */
.test__pull .assert__narrow {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pull .assert__narrow:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pull .assert__narrow .spacer {
  width: 32.5%;
  float: left;
  margin-left: 0;
}
.test__pull .assert__narrow .test, .test__pull .assert__narrow .expect {
  width: 75%;
  float: left;
  margin-left: 2.5%;
}

.test__pull .assert__narrow:before {
  content: "Items should pull 1-column, overlapping the spacer.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pull .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pull .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pull .assert__split .spacer {
  width: 22.5%;
  float: left;
  margin-left: 1.25%;
  margin-right: 1.25%;
}
.test__pull .assert__split .test, .test__pull .assert__split .expect {
  width: 72.5%;
  float: left;
  margin-left: 1.25%;
  margin-right: 1.25%;
}

.test__pull .assert__split:before {
  content: "Items should pull 1-column, overlapping the spacer.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pull .assert__wide {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pull .assert__wide:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pull .assert__wide .spacer {
  width: 35%;
  float: left;
  margin-left: 0;
}
.test__pull .assert__wide .test, .test__pull .assert__wide .expect {
  width: 75%;
  float: left;
  margin-left: 2.5%;
}

.test__pull .assert__wide:before {
  content: "Items should pull 1-column, overlapping the spacer.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pull .assert__wider {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pull .assert__wider:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pull .assert__wider .spacer {
  width: 35%;
  float: left;
  margin-left: 0;
}
.test__pull .assert__wider .test, .test__pull .assert__wider .expect {
  width: 80%;
  float: left;
  margin-left: 2.38095%;
}

.test__pull .assert__wider:before {
  content: "Items should pull 1-column, overlapping the spacer.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] squish */
.test__squish .assert__simple {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__squish .assert__simple:after {
  content: " ";
  display: block;
  clear: both;
}

.test__squish .assert__simple:before {
  content: "Items should have 2-columns margin before and after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__squish .assert__split {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 1.21951%, rgba(102, 102, 255, 0.25) 1.21951%, rgba(179, 179, 255, 0.25) 10.97561%, rgba(0, 0, 0, 0) 10.97561%, rgba(0, 0, 0, 0) 13.41463%, rgba(102, 102, 255, 0.25) 13.41463%, rgba(179, 179, 255, 0.25) 32.92683%, rgba(0, 0, 0, 0) 32.92683%, rgba(0, 0, 0, 0) 35.36585%, rgba(102, 102, 255, 0.25) 35.36585%, rgba(179, 179, 255, 0.25) 64.63415%, rgba(0, 0, 0, 0) 64.63415%, rgba(0, 0, 0, 0) 67.07317%, rgba(102, 102, 255, 0.25) 67.07317%, rgba(179, 179, 255, 0.25) 86.58537%, rgba(0, 0, 0, 0) 86.58537%, rgba(0, 0, 0, 0) 89.02439%, rgba(102, 102, 255, 0.25) 89.02439%, rgba(179, 179, 255, 0.25) 98.78049%, rgba(0, 0, 0, 0) 98.78049%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 1.21951%, rgba(102, 102, 255, 0.25) 1.21951%, rgba(179, 179, 255, 0.25) 10.97561%, rgba(0, 0, 0, 0) 10.97561%, rgba(0, 0, 0, 0) 13.41463%, rgba(102, 102, 255, 0.25) 13.41463%, rgba(179, 179, 255, 0.25) 32.92683%, rgba(0, 0, 0, 0) 32.92683%, rgba(0, 0, 0, 0) 35.36585%, rgba(102, 102, 255, 0.25) 35.36585%, rgba(179, 179, 255, 0.25) 64.63415%, rgba(0, 0, 0, 0) 64.63415%, rgba(0, 0, 0, 0) 67.07317%, rgba(102, 102, 255, 0.25) 67.07317%, rgba(179, 179, 255, 0.25) 86.58537%, rgba(0, 0, 0, 0) 86.58537%, rgba(0, 0, 0, 0) 89.02439%, rgba(102, 102, 255, 0.25) 89.02439%, rgba(179, 179, 255, 0.25) 98.78049%, rgba(0, 0, 0, 0) 98.78049%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 1.21951%, rgba(102, 102, 255, 0.25) 1.21951%, rgba(179, 179, 255, 0.25) 10.97561%, rgba(0, 0, 0, 0) 10.97561%, rgba(0, 0, 0, 0) 13.41463%, rgba(102, 102, 255, 0.25) 13.41463%, rgba(179, 179, 255, 0.25) 32.92683%, rgba(0, 0, 0, 0) 32.92683%, rgba(0, 0, 0, 0) 35.36585%, rgba(102, 102, 255, 0.25) 35.36585%, rgba(179, 179, 255, 0.25) 64.63415%, rgba(0, 0, 0, 0) 64.63415%, rgba(0, 0, 0, 0) 67.07317%, rgba(102, 102, 255, 0.25) 67.07317%, rgba(179, 179, 255, 0.25) 86.58537%, rgba(0, 0, 0, 0) 86.58537%, rgba(0, 0, 0, 0) 89.02439%, rgba(102, 102, 255, 0.25) 89.02439%, rgba(179, 179, 255, 0.25) 98.78049%, rgba(0, 0, 0, 0) 98.78049%);
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__squish .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__squish .assert__split:before {
  content: "Items should have 2-columns margin before and after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__squish .assert__nested {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 14.28571%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__squish .assert__nested:after {
  content: " ";
  display: block;
  clear: both;
}

.test__squish .assert__nested .nest {
  margin-left: 14.28571%;
  margin-right: 14.28571%;
}

.test__squish .assert__nested:before {
  content: "Items should have 1-column margin before, and 2 after - nested.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Padding Syntax ------ */
/* - [mixin] prefix */
.test__prefix .assert__wide {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__prefix .assert__wide:after {
  content: " ";
  display: block;
  clear: both;
}

.test__prefix .assert__wide:before {
  content: "Items should have 3 columns padding before.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__prefix .assert__wider {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 15%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__prefix .assert__wider:after {
  content: " ";
  display: block;
  clear: both;
}

.test__prefix .assert__wider .spacer {
  width: 10%;
  float: left;
}
.test__prefix .assert__wider .test, .test__prefix .assert__wider .expect {
  overflow: hidden;
}

.test__prefix .assert__wider:before {
  content: "Items should have 3 columns padding before.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] suffix */
.test__suffix .assert__wide {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__suffix .assert__wide:after {
  content: " ";
  display: block;
  clear: both;
}

.test__suffix .assert__wide:before {
  content: "Items should have 2 columns padding after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__suffix .assert__wider {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__suffix .assert__wider:after {
  content: " ";
  display: block;
  clear: both;
}

.test__suffix .assert__wider .spacer {
  width: 10%;
  float: right;
  margin-right: 0;
}
.test__suffix .assert__wider .test, .test__suffix .assert__wider .expect {
  overflow: hidden;
}

.test__suffix .assert__wider:before {
  content: "Items should have 2 columns padding after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] pad */
.test__pad .assert__simple {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 10%, rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0) 12.5%, rgba(102, 102, 255, 0.25) 12.5%, rgba(179, 179, 255, 0.25) 32.5%, rgba(0, 0, 0, 0) 32.5%, rgba(0, 0, 0, 0) 35%, rgba(102, 102, 255, 0.25) 35%, rgba(179, 179, 255, 0.25) 65%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0) 67.5%, rgba(102, 102, 255, 0.25) 67.5%, rgba(179, 179, 255, 0.25) 87.5%, rgba(0, 0, 0, 0) 87.5%, rgba(0, 0, 0, 0) 90%, rgba(102, 102, 255, 0.25) 90%, rgba(179, 179, 255, 0.25));
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pad .assert__simple:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pad .assert__simple:before {
  content: "Items should have 2 columns padding before and after.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pad .assert__nested {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 11.53846%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pad .assert__nested:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pad .assert__nested .nest {
  padding-left: 11.53846%;
  padding-right: 11.53846%;
}

.test__pad .assert__nested:before {
  content: "Items should have 1 column padding before, and 2 after - nested.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pad .assert__inside {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pad .assert__inside:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pad .assert__inside:before {
  content: "Items should have 2 columns padding before and after, and keep gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__pad .assert__inside-nogutters {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 12.5%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__pad .assert__inside-nogutters:after {
  content: " ";
  display: block;
  clear: both;
}

.test__pad .assert__inside-nogutters:before {
  content: "Items should have 2 columns padding before and after, without gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* ### Bleed Syntax ---------- */
/* - [mixin] bleed */
.test__bleed .assert__simple {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 11.53846%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__bleed .assert__simple:after {
  content: " ";
  display: block;
  clear: both;
}

.test__bleed .assert__simple .nest {
  margin-left: 11.53846%;
  margin-right: 11.53846%;
}

.test__bleed .assert__simple:before {
  content: "Items should bleed 1 column outside their nested context";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__bleed .assert__inside {
  max-width: 50em;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 10%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__bleed .assert__inside:after {
  content: " ";
  display: block;
  clear: both;
}

.test__bleed .assert__inside .nest {
  margin-top: 24px;
  margin-top: 1.5rem;
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
  margin-left: 10%;
  margin-right: 10%;
}

.test__bleed .assert__inside:before {
  content: "Items should bleed 1em on all sides, and retain their static gutters";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__bleed .assert__split {
  max-width: 60em;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0) 10%, rgba(102, 102, 255, 0.25) 10%, rgba(179, 179, 255, 0.25) 90%, rgba(0, 0, 0, 0) 90%);
  background-size: 8.33333%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__bleed .assert__split:after {
  content: " ";
  display: block;
  clear: both;
}

.test__bleed .assert__split .nest {
  margin-left: 17.5%;
  margin-right: 17.5%;
}

.test__bleed .assert__split:before {
  content: "Items should bleed 1 column horizontal, and retain gutters.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] bleed-x */
.test__bleed-x .assert__simple {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 9.375%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__bleed-x .assert__simple:after {
  content: " ";
  display: block;
  clear: both;
}

.test__bleed-x .assert__simple .nest {
  margin-left: 18.75%;
  margin-right: 18.75%;
}

.test__bleed-x .assert__simple:before {
  content: "Items should bleed 1 column left, and 2 columns right";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__bleed-x .assert__inside {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25));
  background-size: 10%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__bleed-x .assert__inside:after {
  content: " ";
  display: block;
  clear: both;
}

.test__bleed-x .assert__inside .nest {
  margin-left: 10%;
  margin-right: 10%;
}

.test__bleed-x .assert__inside:before {
  content: "Items should bleed 1 column, and retain their gutters";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] bleed-y */
.test__bleed-y .assert__simple {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-image: -moz-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: -webkit-linear-gradient(left, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-image: linear-gradient(to right, rgba(102, 102, 255, 0.25), rgba(179, 179, 255, 0.25) 66.66667%, rgba(0, 0, 0, 0) 66.66667%);
  background-size: 9.375%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}
.test__bleed-y .assert__simple:after {
  content: " ";
  display: block;
  clear: both;
}

.test__bleed-y .assert__simple .nest {
  margin-top: 24px;
  margin-top: 1.5rem;
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
  margin-left: 9.375%;
  margin-right: 9.375%;
}

.test__bleed-y .assert__simple:before {
  content: "Items should bleed .5em top, and 1em bottom.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] get-bleed (3 Assertions, 3 Passed, 0 Failed) */
/* - [function] bleed-shorthand (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 2 Tests: */
/* - 2 Passed */
/* - 0 Failed */
/*
*/
/* ### breakpoint integration ---------- */
/* - [mixin] susy-breakpoint (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 1 Tests: */
/* - 1 Passed */
/* - 0 Failed */
/*
*/
/*

### Shared Output ------ */
/* - [mixin] output */
.test__output .assert__output {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__output .assert__output:before {
  content: "Property value pairs are passed in as maps and output as CSS.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* ### Direction Helpers ---------- */
/* - [function] get-direction (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] to (2 Assertions, 2 Passed, 0 Failed) */
/* - [function] from (2 Assertions, 2 Passed, 0 Failed) */
/*
*/
/* 3 Tests: */
/* - 3 Passed */
/* - 0 Failed */
/*
*/
/*

### Grid Background Output ------ */
/* - [mixin] background-grid-output */
.test__background-grid-output .assert__show {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__background-grid-output .assert__show .test, .test__background-grid-output .assert__show .expect {
  padding-top: 48px;
  padding-top: 3rem;
  padding-bottom: 48px;
  padding-bottom: 3rem;
  background: none;
}

.test__background-grid-output .assert__show:before {
  content: "Elements should show a horizontal clipped red-green-blue gradient, and a vertical baseline";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Shared Container API ------ */
/* - [mixin] container-output */
.test__container-output .assert__fluid {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__container-output .assert__fluid:before {
  content: "Containers should have 60em max-width, centered.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__container-output .assert__static {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__container-output .assert__static:before {
  content: "Containers should have 30em width, flush right.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__container-output .assert__auto {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__container-output .assert__auto:before {
  content: "Containers should have 100% width.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Shared Margin API ------ */
/* - [mixin] margin-output */
.test__margin-output .assert__margin-output {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__margin-output .assert__margin-output:before {
  content: "Elements should have 25% right margin, 8em left.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Shared Padding API ------ */
/* - [mixin] padding-output */
.test__padding-output .assert__padding-output {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__padding-output .assert__padding-output:before {
  content: "Elements should have 25% right padding, 8em left.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Prefix Support ------ */
/* - [mixin] susy-prefix */
.test__susy-prefix .assert__susy-prefix {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-prefix .assert__susy-prefix:before {
  content: "Requested prefixes are added to output.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Background Support ------ */
/* - [mixin] susy-background-image */
.test__susy-background-image .assert__susy-background-image {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-background-image .assert__susy-background-image:before {
  content: "Without Compass, background-image is output directly.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] susy-background-size */
.test__susy-background-size .assert__susy-background-size {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-background-size .assert__susy-background-size:before {
  content: "Without Compass, background-size is output directly.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] susy-background-origin */
.test__susy-background-origin .assert__susy-background-origin {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-background-origin .assert__susy-background-origin:before {
  content: "Without Compass, background-origin is output directly.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] susy-background-clip */
.test__susy-background-clip .assert__susy-background-clip {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-background-clip .assert__susy-background-clip:before {
  content: "Without Compass, background-clip is output directly.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* ### Box Sizing Support ---------- */
/* - [mixin] susy-box-sizing */
.test__susy-box-sizing .assert__border-box {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-box-sizing .assert__border-box .test, .test__susy-box-sizing .assert__border-box .expect {
  width: 50%;
  padding: 0 2em;
}

.test__susy-box-sizing .assert__border-box:before {
  content: "Box-models are correctly output and prefixed.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*
*/
/* 0 Tests: */
/* - 0 Passed */
/* - 0 Failed */
/*
*/
/*

### rem Support ------ */
.test__ .assert__ {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__ .assert__:before {
  content: "Without compass, rem units are output unchanged.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Clearfix Support ------ */
/* - [mixin] susy-clearfix */
.test__susy-clearfix .assert__clearfix {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-clearfix .assert__clearfix .spacer {
  float: left;
  width: 25%;
}

.test__susy-clearfix .assert__clearfix:before {
  content: "Elements should clear floated children.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* ### Susy Support ---------- */
/* - [mixin] susy-support */
.test__susy-support .assert__susy-support {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__susy-support .assert__susy-support:before {
  content: "Recogizes properties that need special support,
      and passes others through directly.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [function] susy-support (3 Assertions, 3 Passed, 0 Failed) */
/*
*/
/* 1 Tests: */
/* - 1 Passed */
/* - 0 Failed */
/*
*/
/*

### Float Container API ------ */
/* - [mixin] float-container */
.test__float-container .assert__float-container {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-container .assert__float-container:before {
  content: "Containers should be 30em wide, flush left.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Float Span API ------ */
/* - [mixin] float-span-output */
.test__float-span-output .assert__full {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-span-output .assert__full .expect {
  clear: both;
}

.test__float-span-output .assert__full:before {
  content: "Output should be 25%, floated left, with matching margins/padding";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__float-span-output .assert__float-to {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-span-output .assert__float-to .expect {
  clear: both;
}

.test__float-span-output .assert__float-to:before {
  content: "Output should be 25%, floated right";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__float-span-output .assert__float-null {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-span-output .assert__float-null:before {
  content: "Output should be 25%, not floated";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Float End API ------ */
/* - [mixin] float-last */
.test__float-last .assert__default {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-last .assert__default .test, .test__float-last .assert__default .expect {
  float: left;
  width: 75%;
  margin-right: 5%;
}

.test__float-last .assert__default:before {
  content: "Items should float flush right.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.test__float-last .assert__last-flow-from {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-last .assert__last-flow-from .test, .test__float-last .assert__last-flow-from .expect {
  float: left;
  width: 75%;
  margin-right: 5%;
}
.test__float-last .assert__last-flow-from .expect {
  clear: both;
}
.test__float-last .assert__last-flow-from .spacer {
  overflow: hidden;
}

.test__float-last .assert__last-flow-from:before {
  content: "Items should not have any right margin.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/* - [mixin] float-first */
.test__float-first .assert__float-first {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__float-first .assert__float-first .test, .test__float-first .assert__float-first .expect {
  float: left;
  width: 75%;
  margin-left: 5%;
}

.test__float-first .assert__float-first:before {
  content: "Items should float flush left.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

/*

### Isolation API ------ */
/* - [mixin] isolate-output */
.test__isolate-output .assert__isolate-output {
  overflow: hidden;
  background: rgba(204, 204, 255, 0.5);
}

.test__isolate-output .assert__isolate-output .test, .test__isolate-output .assert__isolate-output .expect {
  width: 40%;
  float: left;
  margin-right: 5.26316%;
}
.test__isolate-output .assert__isolate-output .expect {
  clear: both;
}

.test__isolate-output .assert__isolate-output:before {
  content: "Isolation at 30%, has 30% left margin and -100% right margin.";
  display: block;
  padding: 0.375rem 0.75rem;
  text-align: left;
  font-style: italic;
}

.results {
  background: rgba(0, 128, 0, 0.25);
  border-color: green;
}
.results:after {
  content: "57 Tests, 57 Passed, 0 Failed";
}
